{"ast":null,"code":"import AXIOS from \"axios\";\nimport parameters from \"./parameters\";\nconst getInstance = () => {\n  return AXIOS.create({\n    // @ts-ignore\n    accept: \"application/json\",\n    baseURL: parameters.baseUrl,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n};\nasync function fetchTrending() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchTrending, params);\n}\nasync function fetchActionMovies() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchActionMovies, params);\n}\nasync function fetchComedyMovies() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchComedyMovies, params);\n}\nasync function fetchDocumentaries() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchDocumentaries, params);\n}\nasync function fetchHorrorMovies() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchHorrorMovies, params);\n}\nasync function fetchNetflixOriginals() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchNetflixOriginals, params);\n}\nasync function fetchRomanceMovies() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchRomanceMovies, params);\n}\nasync function fetchTopRated() {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const instance = getInstance();\n  return await instance.get(parameters.requests.fetchTopRated, params);\n}\nasync function fetchDetails(id) {\n  const instance = getInstance();\n  return await instance.get(`${parameters.requests.details}${id}`);\n}\nconst API_SERVICES = {\n  fetchTrending,\n  fetchActionMovies,\n  fetchComedyMovies,\n  fetchDocumentaries,\n  fetchHorrorMovies,\n  fetchNetflixOriginals,\n  fetchRomanceMovies,\n  fetchTopRated,\n  fetchDetails\n};\nexport default API_SERVICES;","map":{"version":3,"names":["AXIOS","parameters","getInstance","create","accept","baseURL","baseUrl","headers","Accept","fetchTrending","params","arguments","length","undefined","instance","get","requests","fetchActionMovies","fetchComedyMovies","fetchDocumentaries","fetchHorrorMovies","fetchNetflixOriginals","fetchRomanceMovies","fetchTopRated","fetchDetails","id","details","API_SERVICES"],"sources":["/home/vinay/vinay/vinay/tv_maze/src/services/api_services.ts"],"sourcesContent":["import AXIOS from \"axios\"\nimport parameters from \"./parameters\";\n\nconst  getInstance = () =>  {\n    return AXIOS.create({\n      // @ts-ignore\n      accept: \"application/json\",\n      baseURL: parameters.baseUrl,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  }\n\n\n\n\n\n  async function fetchTrending(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchTrending,params);\n  }\n\n  async function fetchActionMovies(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchActionMovies,params);\n  }\n\n  async function fetchComedyMovies(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchComedyMovies,params);\n  }\n\n  async function fetchDocumentaries(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchDocumentaries,params);\n  }\n\n\n  async function fetchHorrorMovies(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchHorrorMovies,params);\n  }\n\n\n  async function fetchNetflixOriginals(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchNetflixOriginals,params);\n  }\n  \n  \n  async function fetchRomanceMovies(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchRomanceMovies,params);\n  }\n\n  async function fetchTopRated(params = {}) {\n    const instance = getInstance();\n    return await instance.get(parameters.requests.fetchTopRated,params);\n  }\n  async function fetchDetails(id:number) {\n    const instance = getInstance();\n    return await instance.get(`${parameters.requests.details}${id}`);\n  }\n  \n  \n\nconst API_SERVICES = {\n    fetchTrending,\n    fetchActionMovies,\n    fetchComedyMovies,\n    fetchDocumentaries,\n    fetchHorrorMovies,\n    fetchNetflixOriginals,\n    fetchRomanceMovies,\n    fetchTopRated,\n    fetchDetails\n}\n\nexport default API_SERVICES\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}